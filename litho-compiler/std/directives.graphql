"""
The `@skip` built-in directive may be provided for fields, fragment spreads, and
inline fragments, and allows for conditional exclusion as described by the `if`
argument.
"""
directive @skip(
    if: Boolean!,
) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"""
The `@include` built-in directive may be provided for fields, fragment spreads,
and inline fragments, and allows for conditional inclusion during execution as
described by the `if` argument.
"""
directive @include(
    if: Boolean!,
) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"""
The `@deprecated` built-in directive is used within the type system definition
language to indicate deprecated portions of a GraphQL service's schema, such as
deprecated fields on a type or deprecated enum values.

Deprecations include a reason for why it is deprecated, which is formatted using
Markdown syntax (as specified by CommonMark).
"""
directive @deprecated(
    reason: String = "No longer supported",
) on
    | FIELD_DEFINITION
    | ARGUMENT_DEFINITION
    | INPUT_FIELD_DEFINITION
    | ENUM_VALUE

"""
The `@specifiedBy` built-in directive is used within the type system definition
language to provide a scalar specification URL for specifying the behavior of
custom scalar types. The URL should point to a human-readable specification of
the data format, serialization, and coercion rules. It must not appear on
built-in scalar types.
"""
directive @specifiedBy(
    url: String!,
) on SCALAR
